```{r}
library(dplyr)
library(ggplot2)
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(url, "StormData.csv")
data <- read.csv("StormData.csv")
data <- tbl_df(data)
```

```{r}
fatal_data <- data %>% group_by(EVTYPE) %>% summarise(tot_fatal = sum(FATALITIES)) %>% arrange(desc(tot_fatal))
inj_data <- data %>% group_by(EVTYPE) %>% summarise(tot_inj = sum(INJURIES)) %>% arrange(desc(tot_inj))
q1_data <- data %>% group_by(EVTYPE) %>% summarise(total = sum(FATALITIES) + sum(INJURIES)) %>% arrange(desc(total))
```

For Question 2, the variables we will look at are PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP. According to the guide for the data, we'll use the EXP variables to apply multipliers to PROPDMG and CROPDMG, depending on the values M, B, and K. We'll assume the other values are errors, since they are not mentioned in the guide.

```{r}
q2_data <- data
q2_data$PROPDMGEXP <- toupper(as.character(q2_data$PROPDMGEXP))
q2_data$CROPDMGEXP <- as.character(q2_data$CROPDMGEXP)
# Convert PROPDMGEXP and CROPDMGEXP
q2_data[q2_data$PROPDMGEXP == "K", "PROPDMGEXP"] <- 1000
q2_data[q2_data$PROPDMGEXP == "M", "PROPDMGEXP"] <- 1000000
q2_data[q2_data$PROPDMGEXP == "B", "PROPDMGEXP"] <- 1000000000
q2_data$PROPDMGEXP <- as.numeric(q2_data$PROPDMGEXP)
q2_data$PROPDMGEXP <- q2_data$PROPDMGEXP %>% replace(., is.na(.), 0)
q2_data[q2_data$CROPDMGEXP %in% c("K","k"), "CROPDMGEXP"] <- 1000
q2_data[q2_data$CROPDMGEXP %in% c("M","m"), "CROPDMGEXP"] <- 1000000
q2_data[q2_data$CROPDMGEXP %in% c("B","b"), "CROPDMGEXP"] <- 1000000000
q2_data$CROPDMGEXP <- as.numeric(q2_data$CROPDMGEXP)
q2_data$CROPDMGEXP <- q2_data$CROPDMGEXP %>% replace(., is.na(.), 0)
q2_data$PropertyDamage <- as.numeric(q2_data$PROPDMG * q2_data$PROPDMGEXP)
q2_data$CropDamage <- as.numeric(q2_data$CROPDMG * q2_data$CROPDMGEXP)
```

Similar to question 1, we'll look at the data in three different ways: by most property damage (prop_data), by most crop damage (crop_data), and by the combined total of property and crop damage (q2_data).

```{r}
prop_data <- q2_data %>% group_by(EVTYPE) %>% summarize(TotalPropertyDamage = sum(PropertyDamage)) %>% arrange(desc(TotalPropertyDamage)) 
crop_data <- q2_data %>% group_by(EVTYPE) %>% summarize(TotalCropDamage = sum(CropDamage)) %>% arrange(desc(TotalCropDamage))
q2_data <- q2_data %>% group_by(EVTYPE) %>% summarize(Total = sum(PropertyDamage) + sum(CropDamage)) %>% arrange(desc(Total))
```

## Results

# Question 1

When we look at the data arranged by highest fatalities, we can see Tornado is first by a big margin. 
```{r}
fatal_data
```

Next, when we see the data arranged by injuries, tornadoes again are first by a big margin.
```{r}
inj_data
```

Graph of top 10 events for fatalities plus injuries:
```{r}
g <- ggplot(q1_data[1:10,], aes(reorder(EVTYPE, -total), total)) + geom_bar(stat="identity") +  theme(axis.text.x = element_text(angle = 90)) + xlab("Event Type") + ylab("Number of Fatalities and Injuries") + ggtitle("Fatalities and Injuries by Event Type")
g
```

From this, we can see that tornadoes cause the most damage with respect to population health; they cause the most fatalities and most injuries.

# Question 2

First, let's look at the top 10 events for property damage:
```{r}
prop_data
```

Then, for crop damage:
```{r}
crop_data
```

Finally, we'll graph the top 10 events for the total property plus crop damage:

```{r}
g <- ggplot(q2_data[1:10,], aes(reorder(EVTYPE, -Total), Total)) + geom_bar(stat="identity") +  theme(axis.text.x = element_text(angle = 90)) + xlab("Event Type") + ylab("Total Property and Crop Damage") + ggtitle("Property and Crop Damage ($) by Event Type")
g
```
